services:
  db:
    image: postgres:15
    container_name: dystore_db
    environment:
      POSTGRES_USER: dystore
      POSTGRES_PASSWORD: dystore_pwd
      POSTGRES_DB: dystore
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    # опционально: оставить доступ только локально
    ports:
      - "127.0.0.1:5432:5432"

  redis:
    image: redis:7-alpine
    container_name: dystore_redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    restart: always
    ports:
      - "127.0.0.1:6379:6379"

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: dystore_api
    env_file:
      - ./server/.env
    depends_on:
      - db
      - redis
    restart: always
    # ⚠️ порт наружу больше не публикуем
    # ports:
    #   - "3001:3001"

  web:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: dystore_web
    env_file:
      - ./client/.env.local
    depends_on:
      - api
    restart: always
    # ⚠️ порт наружу больше не публикуем
    # ports:
    #   - "3000:3000"

  caddy:
    image: ghcr.io/caddyserver/caddy:2.8.4
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web
      - api

volumes:
  pgdata:
  redisdata:
  caddy_data:
  caddy_config:

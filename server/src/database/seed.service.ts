import { Injectable } from '@nestjs/common';
import { PrismaService } from './prisma.service';

@Injectable()
export class SeedService {
  constructor(private readonly prisma: PrismaService) {}

  async seedDatabase() {
    try {
      console.log('üå± –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Å—Ç–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

      // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
      console.log('üßπ –û—á–∏—â–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ...');
      await this.prisma.orderItem.deleteMany({});
      await this.prisma.order.deleteMany({});
      await this.prisma.cartItem.deleteMany({});
      await this.prisma.cart.deleteMany({});
      await this.prisma.product.deleteMany({});
      await this.prisma.category.deleteMany({});
      await this.prisma.user.deleteMany({});
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      console.log('üìÇ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é...');
      const category = await this.prisma.category.create({
        data: {
          name: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è',
          slug: 'test-category',
          image: 'https://example.com/test.jpg',
        },
      });
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞:', category);

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–¥—É–∫—Ç
      console.log('üõçÔ∏è –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä...');
      const product = await this.prisma.product.create({
        data: {
          name: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä',
          shortDescription: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
          description: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞',
          price: 1000,
          stock: 10,
          imageUrl: 'https://example.com/product.jpg',
          categoryId: category.id,
          isFeatured: true,
          popularity: 100,
        },
      });
      console.log('‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω:', product);

      return {
        message: '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)',
        categories: 1,
        products: 1,
      };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
      console.error('Stack trace:', error.stack);
      throw error;
    }
  }
}
